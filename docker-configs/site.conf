server {
  # modsecurity on;
  # modsecurity_rules_file /etc/nginx/modsec/main.conf;
  listen 80;
  client_max_body_size 64000M;

  root /var/www/default/htdocs/httpdocs;
  index index.html index.htm index.php;

  # Include any additional nginx configs
  include /etc/nginx/conf.d/includes/*.conf;

  # Security headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;

  # Deny access to logs directory
  location ~ ^/logs/ {
    deny all;
  }

  # PHP handling via FastCGI
  location ~ \.php$ {
    try_files $uri =404;
    resolver 127.0.0.11 valid=5s;
    set $service "php";
    fastcgi_pass $service:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param HTTP_PROXY "";
    include /etc/nginx/fastcgi_params;
  }

  # Serve static files with cache
  location ~* ^/images/.+\.(?:jpg|jpeg|png|gif|ico|css|js)$ {
    try_files $uri =404;
    add_header Cache-Control "public, max-age=31536000, immutable";
    expires 1y;
    access_log on;
  }

  # Download handling
  location ~* ^/Site/download/.+\.(?:zip|pdf|rar)$ {
    try_files $uri @Downloadbackend;
    add_header Cache-Control "public";
    expires 1y;
  }

  location @Downloadbackend {
    rewrite ^/Site/download/(.*)$ /Site/download.php?id=$1;
  }

  # Front Controller - Route all non-static requests through index.php
  location / {
    try_files $uri /index.php?$query_string;
  }



  # API redirections
  location ~* ^/api/.*$ {
    try_files $uri /index.php?$query_string;
    access_log on;
    log_not_found on;
  }

  # Prevent access to certain PHP files directly
  location ~ \..*/.*\.php$ {
    return 403;
  }

  # Deny hidden files such as .htaccess, .htpasswd, etc.
  location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
  }

  # Don't log or allow access to files ending in ~ (backup files)
  location ~ ~$ {
    access_log off;
    log_not_found off;
    deny all;
  }

  # Don't log favicon and robots.txt requests
  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }
}
