server {
  #modsecurity on;
  #modsecurity_rules_file /etc/nginx/modsec/main.conf;
  listen 80;
  client_max_body_size 64000M;

  root /var/www/default/htdocs/httpdocs;
  index index.html index.htm index.php;

  # Include any additional nginx configs
  include /etc/nginx/conf.d/includes/*.conf;

  # Config to enable HSTS
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

  # X-Frame options clickjacking
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-Content-Type-Options nosniff;
  # this one might be problematic on older nginx versions
  add_header X-Xss-Protection "1; mode=block" always;

  # Use fastcgi for all PHP files
  location ~ \.php$ {
    try_files $uri =404;
    resolver 127.0.0.11 valid=5s;
    set $service "php";
    fastcgi_pass $service:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param HTTP_PROXY "";
    include /etc/nginx/fastcgi_params;
  }

  #Static Contents
  location ~* ^/images/.+.([0-9]).*$ {
    try_files $uri /$uri @backend;
    add_header Pragma "public";
    add_header Cache-Control "public";
    expires 1y;
    access_log on;
    log_not_found on;
  }

  location @backend {
    rewrite ^(.*)$ /Site/View.php?id=$1;
  }

  #Download Contents
  location ~* ^/Site/download/.+.([0-9]).*$ {
    try_files $uri /$uri @Downloadbackend;
    add_header Pragma "public";
    add_header Cache-Control "public";
    expires 1y;
    access_log on;
    log_not_found on;
  }

  location @Downloadbackend {
    rewrite ^(.*)$ /Site/download.php?id=$1;
  }

  # API Redirections
  location ~* ^/api/.*$ {
    try_files $uri /$uri @api;
    access_log on;
    log_not_found on;
  }

  location @api {
    rewrite ^(.*)$ /api.php?$1;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~ \..*/.*\.php$ {
    return 403;
  }

  location / {
    try_files $uri $uri.html $uri/ @extensionless-php;
    index index.html index.htm index.php;
  }

  location ~ \.php$ {
    try_files $uri =404;
  }

  location @extensionless-php {
    rewrite ^(.*)$ $1.php last;
  }

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store
  location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
  }

  # Don't log and deny access to files which end with ~, as these are usually backup files.
  location ~ ~$ {
    access_log off;
    log_not_found off;
    deny all;
  }
}
